/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7 */

#ifndef PB_ACTIVITYLOG_PB_H_INCLUDED
#define PB_ACTIVITYLOG_PB_H_INCLUDED
#include <pb.h>
#include <pb_encode.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _Status {
    Status_UNKNONW = 0,
    Status_BOOT = 1,
    Status_ALIVE = 2,
    Status_SHUTDOWN = 3
} Status;

/* Struct definitions */
typedef struct _LogEntry {
    int64_t time;
    Status status;
} LogEntry;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _Status_MIN Status_UNKNONW
#define _Status_MAX Status_SHUTDOWN
#define _Status_ARRAYSIZE ((Status)(Status_SHUTDOWN+1))

#define LogEntry_status_ENUMTYPE Status


/* Initializer values for message structs */
#define LogEntry_init_default                    {0, _Status_MIN}
#define LogEntry_init_zero                       {0, _Status_MIN}

/* Field tags (for use in manual encoding/decoding) */
#define LogEntry_time_tag                        1
#define LogEntry_status_tag                      2

/* Struct field encoding specification for nanopb */
#define LogEntry_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT64,    time,              1) \
X(a, STATIC,   SINGULAR, UENUM,    status,            2)
#define LogEntry_CALLBACK NULL
#define LogEntry_DEFAULT NULL

extern const pb_msgdesc_t LogEntry_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define LogEntry_fields &LogEntry_msg

/* Maximum encoded size of messages (where known) */
#define LogEntry_size                            13

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
